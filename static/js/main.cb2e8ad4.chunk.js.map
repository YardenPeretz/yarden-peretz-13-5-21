{"version":3,"sources":["reducers/Search_city.js","reducers/Add_favorite.js","reducers/index.js","store.js","components/Favorites.js","components/Header.js","actions/Search_city.js","components/WeatherApi.js","components/Search.js","components/Weather.js","actions/Add_favorite.js","components/App.js","reportWebVitals.js","index.js"],"names":["searchCityReducer","state","action","type","length","city","addCityReducer","push","allReducers","combineReducers","searchCity","addFavoriteCity","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","favorites","get_favorites","getState","fav_list","document","getElementById","className","id","onLoad","forEach","element","add_city_div","createElement","innerHTML","appendChild","Header","to","search_city","city_key","auto_complete_results","selected_city","selected_city_exp","Search","useSelector","dispatch","useDispatch","string","value","onChange","chars","city_name","axios","get","then","response","data","Key","temp_cities_arr","LocalizedName","i","includes","splice","console","log","catch","error","ac_results","map","key","add_city_option","all_option","getElementsByTagName","undefined","remove","selectBox","selectedValue","options","selectedIndex","debuger","temp","Weather","counter","setInterval","display_city_name","innerText","curr_string","today_temp","Temperature","Metric","Value","onClick","last_search","App","Favorites","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gTAeeA,EAfW,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IAAK,SAED,OAAIF,EAAMG,OAAS,GACfH,EAAQ,GACO,CAAEI,KAAMH,EAAOG,OAEf,CAAEA,KAAMH,EAAOG,MAEtC,QACI,OAAOJ,ICCJK,EAZQ,WAAyB,IAAxBL,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACX,IAAK,eAED,OADAF,EAAMM,KAAKL,EAAOG,MACXJ,EACX,QACI,OAAOA,ICGJO,EALKC,YAAgB,CAChCC,WAAYV,EACZW,gBAAiBL,ICDNM,EAFDC,YAAYL,EAAaM,OAAOC,8BAAgCD,OAAOC,gC,eC6CtEC,EA7CG,WACd,IACMC,EADgBL,EAAMM,WACQP,gBAE9BQ,EAAWC,SAASC,eAAe,YA8BzC,OAEI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAMC,GAAG,WAAWC,YA9BvB,MAAZL,GACAF,EAAcQ,SAAQ,SAAAC,GAElB,IAAMC,EAAeP,SAASQ,cAAc,OAC5CD,EAAaL,UAAY,oBACzBK,EAAaE,UAAYH,EAAQrB,KAEjCc,EAASW,YAAYH,Y,QCsBtBI,EAvBA,WAGX,OACI,qBAAKT,UAAU,UAAf,SACI,+BACI,6BACI,+CAGJ,qBAAIA,UAAU,WAAd,UAEQ,cAAC,IAAD,CAAMC,GAAG,gBAAgBS,GAAG,aAA5B,uBACA,cAAC,IAAD,CAAMV,UAAU,WAAWC,GAAG,WAAWS,GAAG,IAA5C,2B,eC7BXC,EAAc,SAAC5B,GACxB,MAAM,CACFF,KAAM,SACNE,KAAMA,I,iBCFV6B,EAAW,GACFC,EAAwB,GCUjCC,EAAgB,GAuFPC,EAAoB,WAC7B,OAAOD,GAEIE,EAzFA,WAEX,IAAMjC,EAAOkC,aAAY,SAAAtC,GAAK,OAAIA,EAAMI,QAClCmC,EAAWC,cACbC,EAAS,GAiEb,OACI,sBAAKpB,UAAU,aAAf,UAEI,+CACA,uBAAOnB,KAAK,OAAOoB,GAAG,YAAYoB,MAAOtC,EAAMuC,SAnExC,WAEX,IDlB2BC,ECkBrBC,EAAY1B,SAASC,eAAe,aAE5B,KADdqB,EAASI,EAAUH,SAGfH,EAASP,EAAYS,IDtBEG,ECyBJH,EDtB3BK,IACKC,IADL,yHAC2HH,IACtHI,MAAK,SAAAC,GAGFhB,EAAWgB,EAASC,KAAK,GAAGC,IAC5B,IAAMC,EAAkB,GACxBH,EAASC,KAAK1B,SAAQ,SAAAC,GAClB,IAAMoB,EAAYpB,EAAQ4B,cAE1BnB,EAAsB5B,KAAKuC,GAC3BO,EAAgB9C,KAAKuC,MAQzB,IAAK,IAAIS,EAAI,EAAGA,EAAIpB,EAAsB/B,OAAQmD,KACa,IAAvDF,EAAgBG,SAASrB,EAAsBoB,KAC/CpB,EAAsBsB,OAAOF,EAAG,GAMxCG,QAAQC,IAAI,oBAAsBN,MAGrCO,OAAM,SAAUC,GACb,OAAOA,MCNa,KAApBf,EAAUH,OAEVH,EAASP,EADTS,EAAS,KAMb,IAAMoB,EAAa1C,SAASC,eAAe,cAEvCc,EAAsB/B,OAAS,GAC/B+B,EAAsB4B,KAAI,SAAAC,GAEtB,IAAMC,EAAkB7C,SAASQ,cAAc,UAC/CqC,EAAgBpC,UAAYmC,EAC5BF,EAAWhC,YAAYmC,MAK/B,IAAMC,EAAaJ,EAAWK,qBAAqB,UACnD,GAAkB,MAAdD,EACA,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAW9D,OAAQmD,SACda,GAAjBF,EAAWX,KACiD,IAAxDpB,EAAsBqB,SAASU,EAAWX,GAAGZ,QAAoBuB,EAAWX,GAAGc,SAK/FX,QAAQC,IAAIxB,IA2ByDb,UAAU,sBAC3E,uBACA,yBAAQC,GAAG,aAAaqB,SAjBb,WAEnB,IAAME,EAAY1B,SAASC,eAAe,aACpCiD,EAAYlD,SAASC,eAAe,cACpCkD,EAAgBD,EAAUE,QAAQF,EAAUG,eAAe9B,MACjEP,EAAgBmC,EACC,MAAbzB,IACAA,EAAUH,MAAQ4B,IAUd,UACI,8CACA,0CACA,oDC/EVG,G,MAAU,WACZ,IAAMC,EAAO/D,EAAMM,WACnBwC,QAAQC,IAAIgB,KA4EDC,EAxEC,WACIrC,aAAY,SAAAtC,GAAK,OAAIA,EAAM4E,WAA3C,IACMrC,EAAWC,cAQjBqC,aAAY,WACR,IAAMC,EAAoB3D,SAASC,eAAe,0BAEvB+C,GAAvB/B,KAA2D,IAAvBA,KAAoD,MAAvBA,KAAoD,MAArB0C,IAChGA,EAAkBC,UAAY3C,OAEnC,KAIH,IFK8B4C,EEM9B,MFHmB,IAAfA,QAAoCb,GAAfa,EACrBlC,IACKC,IADL,2GAEKC,MAAK,SAAAC,GACF,IAAIgC,EAAa9D,SAASC,eAAe,cAC7BD,SAASC,eAAe,SAC9B2D,UAAY,QAClBE,EAAWF,UAAY9B,EAASC,KAAK,GAAGgC,YAAYC,OAAOC,MAC3D3B,QAAQC,IAAIT,MAEfU,OAAM,SAAUC,GACbH,QAAQC,IAAIE,MAGpBd,IACKC,IADL,mEACqEd,EADrE,6CAEKe,MAAK,SAAAC,GACFQ,QAAQC,IAAIT,MAEfU,OAAM,SAAUC,GACbH,QAAQC,IAAIE,MEfpB,sBAAKvC,UAAU,iBAAf,UAEI,uBAAOnB,KAAK,SAASmF,QAASZ,EAASnD,GAAG,aAAaoB,MAAM,eAC7D,qBAAKrB,UAAU,cAAf,SACI,qBAAIA,UAAU,mBAAd,UACI,6BACI,qBAAKA,UAAU,cAAcC,GAAG,YAEpC,qBAAID,UAAU,eAAd,UACI,oBAAIA,UAAU,YAAYC,GAAG,oBAA7B,sBACA,mBAAGD,UAAU,YAAYC,GAAG,kBAEhC,oBAAID,UAAU,gBAAd,SACI,uBAAOnB,KAAK,SAASmF,QAAS,kBA1C1B,WACpB,IACMC,EADgB3E,EAAMM,WACMR,WAClC8B,ECvBE,CACFrC,KAAM,eACNE,KDqBsBkF,IAuC8B5E,IAAmBgC,MAAM,4BAMzE,oBAAIrB,UAAU,cAAd,8BAEA,qBAAKA,UAAU,2BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,8B,OExDpBkE,MAff,WACE,OACE,sBAAKlE,UAAU,kBAAf,UAEI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAACmE,EAAD,CAAWC,KAAK,aAAaC,UAAWF,IACxC,cAAC,EAAD,CAASC,KAAK,IAAIC,UAAWf,WCHxBgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCMdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU1F,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINQ,SAASC,eAAe,SAM1BuE,M","file":"static/js/main.cb2e8ad4.chunk.js","sourcesContent":["const searchCityReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SEARCH':\r\n           //console.log(\"this is from reducer\" + JSON.stringify(state))\r\n            if (state.length > 0) {\r\n                state = [];\r\n                return state = { city: action.city };\r\n            } else {\r\n                return state = { city: action.city };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default searchCityReducer;\r\n\r\n","const addCityReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_FAVORITE':\r\n            state.push(action.city)\r\n            return state;\r\n        default:\r\n            return state;\r\n            \r\n    }   \r\n        \r\n}\r\n\r\nexport default addCityReducer;","import searchCityReducer from './Search_city';\r\nimport addCityReducer from './Add_favorite';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    searchCity: searchCityReducer,\r\n    addFavoriteCity: addCityReducer\r\n});\r\n\r\nexport default allReducers;","import { createStore } from 'redux';\r\nimport allReducers from './reducers/index';\r\n\r\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import store from '../store'\r\nimport '../css/favorites.css';\r\n\r\nconst favorites = () => {\r\n    const current_store = store.getState();\r\n    const get_favorites = current_store.addFavoriteCity;\r\n\r\n    const fav_list = document.getElementById('fav_list');\r\n    const appendFavCity = () => {\r\n\r\n        if (fav_list != null) {\r\n            get_favorites.forEach(element => {\r\n\r\n                const add_city_div = document.createElement('div');\r\n                add_city_div.className = \"col-sm-4 favorite\";\r\n                add_city_div.innerHTML = element.city;\r\n\r\n                fav_list.appendChild(add_city_div);\r\n            });\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    /*\r\n    const all_div = fav_list.getElementsByTagName(\"div\");\r\n    if (all_div != null) {\r\n        for (let i = 0; i < all_div.length; i++) {\r\n            if (all_div[i] != undefined) {\r\n                if(get_favorites.includes(all_div[i].value) === false){all_div[i].remove();}\r\n            }\r\n        }\r\n\r\n    }\r\n    */\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\" id=\"fav_list\" onLoad={appendFavCity()}></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default favorites;\r\n\r\n","import React from 'react';\r\nimport '../css/header.css';\r\nimport { favorites } from './Favorites';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nconst display_favorites = () => {\r\n    console.log(favorites());\r\n}\r\n*/\r\n\r\nconst Header = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"nav-bar\">\r\n            <ul>\r\n                <li>\r\n                    <h2>Weather App</h2>\r\n                </li>\r\n\r\n                <li className=\"nav-btns\">\r\n                    \r\n                        <Link id=\"favorites_btn\" to=\"/Favorites\">FAVORITES</Link>\r\n                        <Link className=\"nav-btns\" id=\"home_btn\" to=\"/\">HOME</Link>\r\n                    \r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","export const search_city = (city) => {\r\n    return{\r\n        type: 'SEARCH',\r\n        city: city\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nlet city_key = '';\r\nexport const auto_complete_results = [];\r\nexport const autocompleteSearch = (chars) => {\r\n    //M0neXmqgNyGUaB1sgb7PFHXpzYHSGuZO new api\r\n    //dfaWC3wisjfgrAGq0lMixKHo0SRq4GDl old api\r\n    axios\r\n        .get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=dfaWC3wisjfgrAGq0lMixKHo0SRq4GDl&q=${chars}`)\r\n        .then(response => {\r\n            // retrieving all possible cities based on string returned from search input.\r\n            // and push it to auto_complete_results array\r\n            city_key = response.data[0].Key;\r\n            const temp_cities_arr = [];\r\n            response.data.forEach(element => {\r\n                const city_name = element.LocalizedName;\r\n                //const city_key = element.Key;\r\n                auto_complete_results.push(city_name);\r\n                temp_cities_arr.push(city_name);\r\n\r\n                // add and remove values from array, based on results returning ajax call\r\n\r\n            });\r\n\r\n\r\n            // comparing \r\n            for (let i = 0; i < auto_complete_results.length; i++) {\r\n                if (temp_cities_arr.includes(auto_complete_results[i]) === false) {\r\n                    auto_complete_results.splice(i, 1)\r\n                    //auto_complete_results.splice(i);\r\n                    //auto_complete_results.splice(auto_complete_results.indexOf(auto_complete_results[i]),1)       \r\n                }\r\n            }\r\n            // console.log(\"ac array : \" + auto_complete_results);\r\n            console.log(\"res.data array : \" + temp_cities_arr);\r\n\r\n        })\r\n        .catch(function (error) {\r\n            return error;\r\n        });\r\n\r\n}\r\n\r\nconst curr_string = '';\r\nexport const currentConditions = (curr_string) => {\r\n    // checking if search input is empty, if not empty then set default city(tel-aviv)\r\n\r\n    if (curr_string != '' || curr_string != undefined) {\r\n        axios\r\n            .get(`https://dataservice.accuweather.com/currentconditions/v1/215854?apikey=M0neXmqgNyGUaB1sgb7PFHXpzYHSGuZO`)\r\n            .then(response => {\r\n                let today_temp = document.getElementById('today_temp');\r\n                let today = document.getElementById('today');\r\n                today.innerText = 'today';\r\n                today_temp.innerText = response.data[0].Temperature.Metric.Value;\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    } else {\r\n        axios\r\n            .get(`https://dataservice.accuweather.com/currentconditions/v1/${city_key}?apikey=M0neXmqgNyGUaB1sgb7PFHXpzYHSGuZO`)\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n}\r\nexport const next_five_days_results = [];\r\nexport const nextFiveDays = () => {\r\n    axios\r\n        .get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${city_key}?apikey=%09dfaWC3wisjfgrAGq0lMixKHo0SRq4GDl`)\r\n        .then(response => {\r\n            response.data.forEach(element => {\r\n                \r\n            });\r\n            console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/search.css';\r\nimport store from '../store'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { search_city } from '../actions/Search_city';\r\nimport { push_val } from '../actions/Search_city';\r\nimport { autocompleteSearch } from './WeatherApi';\r\nimport { auto_complete_results } from './WeatherApi';\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nlet selected_city = '';\r\nconst Search = () => {\r\n\r\n    const city = useSelector(state => state.city);\r\n    const dispatch = useDispatch();\r\n    let string = '';\r\n\r\n    const change = () => {\r\n\r\n        const city_name = document.getElementById('city_name');\r\n        string = city_name.value;\r\n        if (string != '') {\r\n            // storing search result in store obj\r\n            dispatch(search_city(string));\r\n\r\n            // calling auto complete function with search input value as parameter.\r\n            autocompleteSearch(string);\r\n\r\n        }\r\n        if (city_name.value === '') {\r\n            string = '';\r\n            dispatch(search_city(string));\r\n        }\r\n\r\n\r\n\r\n        const ac_results = document.getElementById('ac_results');\r\n        // creating option element for each key\r\n        if (auto_complete_results.length > 0) {\r\n            auto_complete_results.map(key => {\r\n\r\n                const add_city_option = document.createElement('option');\r\n                add_city_option.innerHTML = key;\r\n                ac_results.appendChild(add_city_option);\r\n\r\n            });\r\n        }\r\n\r\n        const all_option = ac_results.getElementsByTagName(\"option\")\r\n        if (all_option != null) {\r\n            for (let i = 0; i < all_option.length; i++) {\r\n                if (all_option[i] != undefined) {\r\n                    if (auto_complete_results.includes(all_option[i].value) === false) { all_option[i].remove(); }\r\n                }\r\n            }\r\n\r\n        }\r\n        console.log(auto_complete_results);\r\n\r\n    } // end change func'\r\n\r\n   \r\n    \r\n    /*\r\n    const selected_city_exp = () => {\r\n        return selected_city;\r\n    }\r\n    */\r\n    \r\n    const changeFunc = () => {\r\n    \r\n    const city_name = document.getElementById('city_name');\r\n    const selectBox = document.getElementById(\"ac_results\");\r\n    const selectedValue = selectBox.options[selectBox.selectedIndex].value;\r\n    selected_city = selectedValue;\r\n    if (city_name != null) {\r\n        city_name.value = selectedValue;\r\n    }\r\n   }\r\n\r\n    return (\r\n        <div className=\"search_bar\">\r\n\r\n            <p>Search City : </p>\r\n            <input type=\"text\" id=\"city_name\" value={city} onChange={change} className=\"basicAutoComplete\" />\r\n            <br></br>\r\n            <select id=\"ac_results\" onChange={changeFunc}>\r\n                <option>tel aviv</option>\r\n                <option>gaza</option>\r\n                <option>yeruham</option>\r\n            </select>\r\n\r\n        </div>\r\n    );\r\n \r\n}\r\n\r\nexport const selected_city_exp = () => {\r\n    return selected_city;\r\n}\r\nexport default Search;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/weather.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { add_favorite } from '../actions/Add_favorite';\r\n//import search from './components/Search';\r\nimport store from '../store';\r\nimport axios from \"axios\";\r\nimport { autocompleteSearch } from './WeatherApi';\r\nimport { currentConditions } from './WeatherApi';\r\nimport { nextFiveDays } from './WeatherApi';\r\nimport { selected_city_exp } from './Search';\r\n\r\nconst debuger = () => {\r\n    const temp = store.getState();\r\n    console.log(temp);\r\n\r\n}\r\n\r\nconst Weather = () => {\r\n    const counter = useSelector(state => state.counter);\r\n    const dispatch = useDispatch();\r\n\r\n    const addFavoriteCity = () => {\r\n        const current_store = store.getState();\r\n        const last_search = current_store.searchCity;\r\n        dispatch(add_favorite(last_search));\r\n    }\r\n\r\n    setInterval(() => {\r\n        const display_city_name = document.getElementById('display_city_name');\r\n\r\n        if (selected_city_exp() != undefined && selected_city_exp() != '' && selected_city_exp() != null && display_city_name != null) {\r\n            display_city_name.innerText = selected_city_exp();\r\n        }\r\n    }, 500);\r\n\r\n    // get temperature and details about current location\r\n    \r\n    let empty_string = '';\r\n    \r\n    currentConditions();\r\n    \r\n\r\n    /*\r\n    setTimeout(() => {\r\n        nextFiveDays();\r\n    },5000)\r\n    */\r\n    \r\n    return (\r\n\r\n        <div className=\"display_cities\">\r\n\r\n            <input type=\"button\" onClick={debuger} id=\"show_store\" value=\"show_store\" />\r\n            <div className=\"top_section\">\r\n                <ul className=\"top_section_list\">\r\n                    <li>\r\n                        <div className=\"tlv_default\" id=\"today\"></div>\r\n                    </li>\r\n                    <li className=\"city_details\">\r\n                        <h5 className=\"city_name\" id=\"display_city_name\">Tel Aviv</h5>\r\n                        <p className=\"city_temp\" id=\"today_temp\"></p>\r\n                    </li>\r\n                    <li className=\"add_favorites\">\r\n                        <input type=\"button\" onClick={() => addFavoriteCity()} value=\"Add to Favorites\" />\r\n                    </li>\r\n                </ul>\r\n            </div>{/*end top_section*/}\r\n\r\n\r\n            <h2 className=\"dsc_heading\">scattered clouds</h2>\r\n\r\n            <div className=\"display_days_and_degrees\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-2 day_box\"></div>\r\n                    <div className=\"col-sm-2 day_box\"></div>\r\n                    <div className=\"col-sm-2 day_box\"></div>\r\n                    <div className=\"col-sm-2 day_box\"></div>\r\n                    <div className=\"col-sm-2 day_box\"></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n","//\r\nexport const add_favorite = (favorite_city) => {\r\n    return{\r\n        type: 'ADD_FAVORITE',\r\n        city: favorite_city\r\n    }\r\n}","import Header from \"./Header\";\nimport Search from \"./Search\";\nimport Weather from \"./Weather\";\nimport Favorites from \"./Favorites\";\nimport { BrowserRouter as Router, Switch, Link, withRouter } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n\n        <Header />\n        <Search />\n        <Switch>       \n          <Favorites path=\"/Favorites\" component={Favorites} />\n          <Weather path=\"/\" component={Weather} />\n        </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nimport { BrowserRouter as Router, Switch, Link, withRouter } from 'react-router-dom';\n\n//const store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n//setInterval(function(){console.log(store.getState());},5000)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}