{"version":3,"sources":["reducers/Search_city.js","reducers/Add_favorite.js","reducers/index.js","store.js","components/Favorites.js","components/Header.js","actions/Search_city.js","components/WeatherApi.js","components/Search.js","components/Weather.js","actions/Add_favorite.js","components/App.js","reportWebVitals.js","index.js"],"names":["searchCityReducer","state","action","type","length","city","addCityReducer","push","allReducers","combineReducers","searchCity","addFavoriteCity","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Favorites","get_favorites","getState","fav_list","document","getElementById","map","element","add_city_div","createElement","className","innerHTML","getElementsByTagName","appendChild","id","Header","to","search_city","city_key","auto_complete_results","currentConditions","axios","get","then","response","today_temp","today","weather_text","innerText","data","Temperature","Metric","Value","WeatherText","console","log","catch","error","nextFiveDays","first_day","second_day","third_day","fourth_day","fifth_day","temp_arr","i","DailyForecasts","F_to_C","Maximum","toFixed","selected_city","string","selected_city_exp","Search","useSelector","dispatch","useDispatch","value","onChange","chars","city_name","Key","temp_cities_arr","forEach","LocalizedName","includes","splice","ac_results","key","add_city_option","selectBox","selectedValue","options","selectedIndex","Weather","counter","setInterval","display_city_name","undefined","onClick","last_search","App","component","withRouter","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.42a702d1.chunk.js","sourcesContent":["const searchCityReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SEARCH':\r\n           //console.log(\"this is from reducer\" + JSON.stringify(state))\r\n            if (state.length > 0) {\r\n                state = [];\r\n                return state = { city: action.city };\r\n            } else {\r\n                return state = { city: action.city };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default searchCityReducer;\r\n\r\n","const addCityReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_FAVORITE':\r\n            state.push(action.city)\r\n            return state;\r\n        default:\r\n            return state;\r\n            \r\n    }   \r\n        \r\n}\r\n\r\nexport default addCityReducer;","import searchCityReducer from './Search_city';\r\nimport addCityReducer from './Add_favorite';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    searchCity: searchCityReducer,\r\n    addFavoriteCity: addCityReducer\r\n});\r\n\r\nexport default allReducers;","import { createStore } from 'redux';\r\nimport allReducers from './reducers/index';\r\n\r\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import store from '../store'\r\nimport '../css/favorites.css';\r\n\r\nconst Favorites = () => {\r\n    const current_store = store.getState();\r\n    const get_favorites = current_store.addFavoriteCity;\r\n\r\n    const fav_list = document.getElementById('fav_list');\r\n    const appendFavCity = () => {\r\n\r\n        if (fav_list != null) {\r\n            get_favorites.map(element => {\r\n\r\n                const add_city_div = document.createElement('div');\r\n                \r\n                add_city_div.className = \"col-sm-4 favorite\";\r\n                add_city_div.innerHTML = element.city;\r\n                const favorite_div = document.getElementsByTagName('div');\r\n                \r\n\r\n\r\n                   // const div = document.getElementsByTagName('div');\r\n                          \r\n                        fav_list.appendChild(add_city_div)\r\n                    \r\n            });\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    appendFavCity();\r\n    \r\n    /*\r\n    const delete_old_div = () =>{\r\n\r\n    \r\n    const all_div = fav_list.getElementsByTagName(\"div\");\r\n    if (all_div != null) {\r\n        for (let i = 0; i < all_div.length; i++) {\r\n            if (all_div[i] != undefined) {\r\n                if(get_favorites.includes(all_div[i].value) === false){all_div[i].remove();}\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n*/\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\" id=\"fav_list\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Favorites;\r\n\r\n","import React from 'react';\r\nimport '../css/header.css';\r\nimport { favorites } from './Favorites';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nconst display_favorites = () => {\r\n    console.log(favorites());\r\n}\r\n*/\r\n\r\nconst Header = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"nav-bar\">\r\n            <ul>\r\n                <li>\r\n                    <h2 id=\"nav_logo\">Weather App</h2>\r\n                </li>\r\n\r\n                <li className=\"nav-btns\">\r\n                    \r\n                        <Link id=\"favorites_btn\" className=\"btn btn-primary\" to=\"/Favorites\">FAVORITES</Link>\r\n                        <Link className=\"nav-btns\" className=\"btn btn-primary\" id=\"home_btn\" to=\"/\">HOME</Link>\r\n                    \r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","export const search_city = (city) => {\r\n    return{\r\n        type: 'SEARCH',\r\n        city: city\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nlet city_key = 'tel aviv';\r\n\r\nexport const auto_complete_results = [];\r\nexport const autocompleteSearch = (chars) => {\r\n    //M0neXmqgNyGUaB1sgb7PFHXpzYHSGuZO new key\r\n    //dfaWC3wisjfgrAGq0lMixKHo0SRq4GDl old key\r\n    // sqVSAPfjdrvqSbBKNAu8XLHsGhb6JDRr another key\r\n    axios\r\n        .get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=sqVSAPfjdrvqSbBKNAu8XLHsGhb6JDRr&q=${chars}`)\r\n        .then(response => {\r\n            // retrieving all possible cities based on string returned from search input.\r\n            // and push it to auto_complete_results array\r\n\r\n            city_key = response.data[0].Key;\r\n            currentConditions(city_key);\r\n            nextFiveDays(city_key);\r\n\r\n\r\n            const temp_cities_arr = [];\r\n            response.data.forEach(element => {\r\n                const city_name = element.LocalizedName;\r\n                auto_complete_results.push(city_name);\r\n                temp_cities_arr.push(city_name);\r\n            });\r\n\r\n\r\n            // deleting irrelevant results from autocomplete input \r\n            for (let i = 0; i < auto_complete_results.length; i++) {\r\n                if (temp_cities_arr.includes(auto_complete_results[i]) === false) {\r\n                    auto_complete_results.splice(i, 1)\r\n                }\r\n            }\r\n\r\n            console.log(\"res.data array : \" + temp_cities_arr);\r\n\r\n        })\r\n        .catch(function (error) {\r\n            return error;\r\n        });\r\n\r\n}\r\n\r\nconst curr_string = '';\r\nexport const currentConditions = (city_key) => {\r\n    // checking if search input is empty, if not empty then set default city(tel-aviv)\r\n    \r\n    axios\r\n        .get(`https://dataservice.accuweather.com/currentconditions/v1/${city_key}?apikey=sqVSAPfjdrvqSbBKNAu8XLHsGhb6JDRr&`)\r\n        .then(response => {\r\n            const today_temp = document.getElementById('today_temp');\r\n            const today = document.getElementById('today');\r\n            const weather_text = document.getElementById('weather_text');\r\n            today.innerText = 'today';\r\n            today_temp.innerText = response.data[0].Temperature.Metric.Value;\r\n            weather_text.innerText = response.data[0].WeatherText;\r\n            console.log(response.data[0].WeatherText);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n}\r\nexport const next_five_days_results = [];\r\nexport const nextFiveDays = (city_key) => {\r\n    axios\r\n        .get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${city_key}?apikey=sqVSAPfjdrvqSbBKNAu8XLHsGhb6JDRr`)\r\n        .then(response => {\r\n            const first_day = document.getElementById('first_day_temp');\r\n            const second_day = document.getElementById('second_day_temp');\r\n            const third_day = document.getElementById('third_day_temp');\r\n            const fourth_day = document.getElementById('fourth_day_temp');\r\n            const fifth_day = document.getElementById('fifth_day_temp');\r\n            const temp_arr = [];\r\n\r\n            for(let i = 0; i < response.data.DailyForecasts.length; i++){\r\n                const fahrenheit = response.data.DailyForecasts[i].Temperature.Maximum.Value;\r\n                const F_to_C = ((fahrenheit - 32) * 0.5556).toFixed(0);\r\n                temp_arr.push(F_to_C);\r\n            }\r\n           \r\n            first_day.innerText = temp_arr[0] + \"C\";\r\n            second_day.innerText = temp_arr[1] + \"C\";\r\n            third_day.innerText = temp_arr[2] + \"C\";\r\n            fourth_day.innerText = temp_arr[3] + \"C\";\r\n            fifth_day.innerText = temp_arr[4] + \"C\";\r\n            console.log(temp_arr)\r\n        \r\n            //(F - 32) * 5556\r\n           \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/search.css';\r\nimport store from '../store'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { search_city } from '../actions/Search_city';\r\nimport { autocompleteSearch } from './WeatherApi';\r\nimport { auto_complete_results } from './WeatherApi';\r\n\r\nimport axios from \"axios\";\r\n\r\nlet selected_city = '';\r\nlet string = 'tel aviv';\r\nconst Search = () => {\r\n\r\n    const city = useSelector(state => state.city);\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const change = () => {\r\n        const city_name = document.getElementById('city_name');\r\n        selected_city = city_name.value;\r\n\r\n      string = city_name.value;\r\n        \r\n        if (string != '') {\r\n            // storing search result in store obj\r\n            dispatch(search_city(string));\r\n\r\n            // calling auto complete function with search input value as parameter.\r\n            autocompleteSearch(string);\r\n\r\n        }\r\n        if (city_name.value === '') {\r\n            string = '';\r\n            dispatch(search_city(string));\r\n        }\r\n\r\n \r\n\r\n        const ac_results = document.getElementById('ac_results');\r\n        //const all_option = ac_results.getElementsByTagName(\"option\")\r\n        // creating option element for each key\r\n        //const city_opt = document.getElementsByClassName('city_opt');\r\n    \r\n        if (auto_complete_results.length > 0) {\r\n            \r\n            auto_complete_results.map(key => {\r\n\r\n                const add_city_option = document.createElement('option');\r\n                add_city_option.className = 'city_opt';\r\n                add_city_option.innerHTML = key;\r\n                ac_results.appendChild(add_city_option);\r\n\r\n            });\r\n        }\r\n\r\n        /*\r\n        const all_option = ac_results.getElementsByTagName(\"option\")\r\n        if (all_option != null) {\r\n            for (let i = 0; i < all_option.length; i++) {\r\n                if (all_option[i] != undefined) {\r\n                    if (auto_complete_results.includes(all_option[i].value) === false) { all_option[i].remove(); }\r\n                }\r\n            }\r\n\r\n        }\r\n        */\r\n        \r\n        console.log(auto_complete_results);\r\n\r\n    } // end change func'\r\n\r\n   \r\n    \r\n    /*\r\n    const selected_city_exp = () => {\r\n        return selected_city;\r\n    }\r\n    */\r\n    \r\n    const changeFunc = () => {\r\n    \r\n    const city_name = document.getElementById('city_name');\r\n    const selectBox = document.getElementById(\"ac_results\");\r\n    const selectedValue = selectBox.options[selectBox.selectedIndex].value;\r\n    selected_city = selectedValue;\r\n    if (city_name != null) {\r\n        city_name.value = selectedValue;\r\n    }\r\n   }\r\n\r\n    return (\r\n        <div className=\"search_bar\">\r\n\r\n            <p className=\"h4\">Search City </p>\r\n            <input type=\"text\" id=\"city_name\" value={city} onChange={change} className=\"form-control\" />\r\n            <br></br>\r\n            <select id=\"ac_results\" onChange={changeFunc}>\r\n\r\n            </select>\r\n\r\n        </div>\r\n    );\r\n \r\n}\r\n\r\nexport const selected_city_exp = () => {\r\n    return selected_city;\r\n}\r\nexport default Search;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/weather.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { add_favorite } from '../actions/Add_favorite';\r\n//import search from './components/Search';\r\nimport store from '../store';\r\nimport { currentConditions } from './WeatherApi';\r\nimport { nextFiveDays } from './WeatherApi';\r\nimport { selected_city_exp } from './Search';\r\n\r\nconst show_store = () => {\r\n    const temp = store.getState();\r\n    console.log(temp);\r\n\r\n}\r\n\r\nconst Weather = () => {\r\n    const counter = useSelector(state => state.counter);\r\n    const dispatch = useDispatch();\r\n\r\n    const addFavoriteCity = () => {\r\n        const current_store = store.getState();\r\n        const last_search = current_store.searchCity;\r\n        if(last_search != undefined && last_search != '' && last_search !=selected_city_exp()){\r\n            dispatch(add_favorite(last_search));\r\n\r\n        }\r\n    }\r\n\r\n    setInterval(() => {\r\n        const display_city_name = document.getElementById('display_city_name');\r\n\r\n        if (selected_city_exp() != undefined && selected_city_exp() != '' && selected_city_exp() != null && display_city_name != null) {\r\n            display_city_name.innerText = selected_city_exp();\r\n        }\r\n    }, 500);\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"display_cities\">\r\n\r\n            \r\n            <div className=\"top_section\">\r\n                \r\n                <ul className=\"top_section_list\">\r\n                    \r\n                        \r\n                   \r\n                    <li className=\"city_details\">\r\n                        <h2 id=\"today\"></h2>\r\n                        <h5 className=\"city_name\" id=\"display_city_name\">Tel Aviv</h5>\r\n                        <p className=\"city_temp\" id=\"today_temp\">38C</p>\r\n                    </li>\r\n                    <li className=\"add_favorites\">\r\n                        <input type=\"button\" onClick={() => addFavoriteCity()} className=\"btn btn-light\" value=\"Add Favorite\" />\r\n                    </li>\r\n                </ul>\r\n            </div>{/*end top_section*/}\r\n\r\n\r\n            <h2 className=\"dsc_heading\" id=\"weather_text\">heading</h2>\r\n\r\n            <div className=\"display_days_and_degrees\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-2 day_box\">\r\n                        <h5>sun</h5>\r\n                        <p id=\"first_day_temp\">38C</p>\r\n                    </div>\r\n                    <div className=\"col-sm-2 day_box\">\r\n                        <h5>mon</h5>\r\n                        <p id=\"second_day_temp\">38C</p>\r\n                    </div>\r\n                    <div className=\"col-sm-2 day_box\">\r\n                        <h5>tue</h5>\r\n                        <p id=\"third_day_temp\">38C</p>\r\n                    </div>\r\n                    <div className=\"col-sm-2 day_box\">\r\n                        <h5>wed</h5>\r\n                        <p id=\"fourth_day_temp\">38C</p>\r\n                    </div>\r\n                    <div className=\"col-sm-2 day_box\">\r\n                        <h5>thu</h5>\r\n                        <p id=\"fifth_day_temp\">38C</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n","//\r\nexport const add_favorite = (favorite_city) => {\r\n    return{\r\n        type: 'ADD_FAVORITE',\r\n        city: favorite_city\r\n    }\r\n}","import Header from \"./Header\";\nimport Search from \"./Search\";\nimport Weather from \"./Weather\";\nimport Favorites from \"./Favorites\";\nimport { BrowserRouter as Router, Switch, Link, withRouter, Route } from 'react-router-dom';\n\n\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Router>\n\n        <Header />\n        <Search component={withRouter(Search)} />\n        <Switch>\n\n          <Favorites path=\"/Favorites\" component={withRouter(Favorites)} />\n          \n          <Weather exact path=\"/\" component={withRouter(Weather)} />\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nimport { BrowserRouter as Router, Switch, Link, withRouter, BrowserRouter } from 'react-router-dom';\n\n//const store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n//setInterval(function(){console.log(store.getState());},5000)\n\n\nReactDOM.render(\n\n    <Provider store={store}>\n      \n        <App />\n     \n    </Provider>,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}